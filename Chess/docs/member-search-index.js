memberSearchIndex = [{"p":"application","c":"Main","l":"backgroundGroup"},{"p":"Logic","c":"PieceType","l":"BISHOP"},{"p":"Pieces","c":"Bishop","l":"Bishop(int, int, int, Side)","u":"%3Cinit%3E(int,int,int,Logic.Side)"},{"p":"Logic","c":"Side","l":"black"},{"p":"Logic","c":"Turn","l":"BLACK"},{"p":"application","c":"Board","l":"boardSize"},{"p":"application","c":"Main","l":"buttonGroup"},{"p":"Pieces","c":"Piece","l":"castleable"},{"p":"Logic","c":"Game","l":"CheckMove(Piece, Move)","u":"CheckMove(Pieces.Piece,Logic.Move)"},{"p":"Logic","c":"Fen","l":"chessboard"},{"p":"application","c":"Board","l":"choice"},{"p":"application","c":"Board","l":"cleanBoard()"},{"p":"application","c":"Board","l":"comGroup"},{"p":"application","c":"Board","l":"coordinates"},{"p":"application","c":"Board","l":"drawBoard(int)"},{"p":"application","c":"Board","l":"drawPieces(List<Piece>)","u":"drawPieces(java.util.List)"},{"p":"application","c":"Images","l":"drawPieces(List<Piece>)","u":"drawPieces(java.util.List)"},{"p":"Logic","c":"Move","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"Logic","c":"Game","l":"ExecuteMove(Piece, Move)","u":"ExecuteMove(Pieces.Piece,Logic.Move)"},{"p":"Logic","c":"Game","l":"fen"},{"p":"Logic","c":"Fen","l":"Fen()","u":"%3Cinit%3E()"},{"p":"Logic","c":"Fen","l":"Fen(Fen)","u":"%3Cinit%3E(Logic.Fen)"},{"p":"Pieces","c":"Piece","l":"findKing(char, List<Piece>)","u":"findKing(char,java.util.List)"},{"p":"Pieces","c":"Piece","l":"findPiece(Move, List<Piece>)","u":"findPiece(Logic.Move,java.util.List)"},{"p":"application","c":"Board","l":"findSquare(double, double)","u":"findSquare(double,double)"},{"p":"application","c":"Main","l":"game"},{"p":"Logic","c":"Game","l":"Game()","u":"%3Cinit%3E()"},{"p":"application","c":"Board","l":"getClickedPiece(List<Piece>, int, int)","u":"getClickedPiece(java.util.List,int,int)"},{"p":"Logic","c":"PieceType","l":"getId()"},{"p":"Pieces","c":"Piece","l":"getId()"},{"p":"Pieces","c":"Piece","l":"getPieceSide()"},{"p":"Pieces","c":"Piece","l":"getPieceType()"},{"p":"Logic","c":"PieceType","l":"getSymbol()"},{"p":"Logic","c":"Turn","l":"getSymbol()"},{"p":"Logic","c":"Game","l":"getTurn()"},{"p":"application","c":"Resolution","l":"getX()"},{"p":"Logic","c":"Move","l":"getX()"},{"p":"Pieces","c":"Piece","l":"getX()"},{"p":"application","c":"Resolution","l":"getY()"},{"p":"Logic","c":"Move","l":"getY()"},{"p":"Pieces","c":"Piece","l":"getY()"},{"p":"application","c":"Board","l":"gridGroup"},{"p":"Logic","c":"Game","l":"HasMoves(List<Piece>, char[][], Side)","u":"HasMoves(java.util.List,char[][],Logic.Side)"},{"p":"application","c":"Images","l":"Images()","u":"%3Cinit%3E()"},{"p":"Logic","c":"Fen","l":"insert(Piece)","u":"insert(Pieces.Piece)"},{"p":"Logic","c":"Game","l":"IsChecked(List<Piece>, char[][], Side)","u":"IsChecked(java.util.List,char[][],Logic.Side)"},{"p":"Logic","c":"PieceType","l":"isPiece(char)"},{"p":"Logic","c":"Side","l":"itsTurn(Side, Turn)","u":"itsTurn(Logic.Side,Logic.Turn)"},{"p":"Logic","c":"PieceType","l":"KING"},{"p":"Pieces","c":"King","l":"King(int, int, int, Side)","u":"%3Cinit%3E(int,int,int,Logic.Side)"},{"p":"Logic","c":"PieceType","l":"KNIGHT"},{"p":"Pieces","c":"Knight","l":"Knight(int, int, int, Side)","u":"%3Cinit%3E(int,int,int,Logic.Side)"},{"p":"application","c":"Main.Choice","l":"kuba"},{"p":"application","c":"Board","l":"lastClicked"},{"p":"Pieces","c":"Bishop","l":"LegalMoves(char[][])"},{"p":"Pieces","c":"King","l":"LegalMoves(char[][])"},{"p":"Pieces","c":"Knight","l":"LegalMoves(char[][])"},{"p":"Pieces","c":"Pawn","l":"LegalMoves(char[][])"},{"p":"Pieces","c":"Piece","l":"LegalMoves(char[][])"},{"p":"Pieces","c":"Queen","l":"LegalMoves(char[][])"},{"p":"Pieces","c":"Rook","l":"LegalMoves(char[][])"},{"p":"Logic","c":"Move","l":"letter"},{"p":"Pieces","c":"Piece","l":"ListLegalMoves()"},{"p":"Logic","c":"Fen","l":"loadFenPosition(String)","u":"loadFenPosition(java.lang.String)"},{"p":"Pieces","c":"Knight","l":"Loop(char[][], int)","u":"Loop(char[][],int)"},{"p":"Pieces","c":"Bishop","l":"Loop(char[][], int, int)","u":"Loop(char[][],int,int)"},{"p":"Pieces","c":"King","l":"Loop(char[][], int, int)","u":"Loop(char[][],int,int)"},{"p":"Pieces","c":"Rook","l":"Loop(char[][], int, int, boolean)","u":"Loop(char[][],int,int,boolean)"},{"p":"application","c":"Main","l":"Main()","u":"%3Cinit%3E()"},{"p":"application","c":"Main","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"Logic","c":"Game","l":"MakeMove(Move, Move)","u":"MakeMove(Logic.Move,Logic.Move)"},{"p":"Logic","c":"Game","l":"Message(String)","u":"Message(java.lang.String)"},{"p":"application","c":"Main","l":"mouseClick()"},{"p":"Logic","c":"Move","l":"Move(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"application","c":"Board","l":"moveGroup"},{"p":"Pieces","c":"Piece","l":"moves"},{"p":"application","c":"Board","l":"nextClick"},{"p":"Logic","c":"PieceType","l":"PAWN"},{"p":"Pieces","c":"Pawn","l":"Pawn(int, int, int, Side)","u":"%3Cinit%3E(int,int,int,Logic.Side)"},{"p":"Pieces","c":"Piece","l":"Piece(int, int, int, Side, PieceType)","u":"%3Cinit%3E(int,int,int,Logic.Side,Logic.PieceType)"},{"p":"Logic","c":"PieceType","l":"PieceChar(Piece)","u":"PieceChar(Pieces.Piece)"},{"p":"application","c":"Board","l":"pieceGroup"},{"p":"Logic","c":"Fen","l":"pieceInPos(int, int)","u":"pieceInPos(int,int)"},{"p":"Logic","c":"Fen","l":"pieces"},{"p":"application","c":"Board","l":"previousColor"},{"p":"Logic","c":"PieceType","l":"QUEEN"},{"p":"Pieces","c":"Queen","l":"Queen(int, int, int, Side)","u":"%3Cinit%3E(int,int,int,Logic.Side)"},{"p":"application","c":"Main.Choice","l":"radek"},{"p":"Logic","c":"Fen","l":"remove(Piece)","u":"remove(Pieces.Piece)"},{"p":"Logic","c":"Fen","l":"resetBoard()"},{"p":"Pieces","c":"Piece","l":"ResetMoves(List<Move>)","u":"ResetMoves(java.util.List)"},{"p":"Logic","c":"PieceType","l":"ROOK"},{"p":"Pieces","c":"Rook","l":"Rook(int, int, int, Side)","u":"%3Cinit%3E(int,int,int,Logic.Side)"},{"p":"application","c":"Main","l":"scene"},{"p":"application","c":"Board","l":"setChoice(Main.Choice)","u":"setChoice(application.Main.Choice)"},{"p":"application","c":"Board","l":"setCoordinates(double, double, int)","u":"setCoordinates(double,double,int)"},{"p":"Pieces","c":"Piece","l":"setId(int)"},{"p":"application","c":"Board","l":"setImg(String, double, double)","u":"setImg(java.lang.String,double,double)"},{"p":"Pieces","c":"Piece","l":"setPieceSide(Side)","u":"setPieceSide(Logic.Side)"},{"p":"Pieces","c":"Piece","l":"setPieceType(PieceType)","u":"setPieceType(Logic.PieceType)"},{"p":"application","c":"Resolution","l":"setX(int)"},{"p":"Pieces","c":"Piece","l":"setX(int)"},{"p":"application","c":"Resolution","l":"setY(int)"},{"p":"Pieces","c":"Piece","l":"setY(int)"},{"p":"application","c":"Main","l":"start(Stage)","u":"start(javafx.stage.Stage)"},{"p":"Logic","c":"Turn","l":"switchTurn(Turn)","u":"switchTurn(Logic.Turn)"},{"p":"application","c":"Board","l":"textGroup"},{"p":"Logic","c":"Move","l":"toString()"},{"p":"Pieces","c":"Piece","l":"toString()"},{"p":"Logic","c":"Game","l":"TranslateMove(String)","u":"TranslateMove(java.lang.String)"},{"p":"Logic","c":"Game","l":"turn"},{"p":"application","c":"Board","l":"turnGroup"},{"p":"Logic","c":"Turn","l":"TurnToId(Turn)","u":"TurnToId(Logic.Turn)"},{"p":"Logic","c":"Side","l":"TurnToSide(Turn)","u":"TurnToSide(Logic.Turn)"},{"p":"application","c":"Main.Choice","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"Logic","c":"PieceType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"Logic","c":"Side","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"Logic","c":"Turn","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"application","c":"Main.Choice","l":"values()"},{"p":"Logic","c":"PieceType","l":"values()"},{"p":"Logic","c":"Side","l":"values()"},{"p":"Logic","c":"Turn","l":"values()"},{"p":"Logic","c":"Side","l":"whatSide(char)"},{"p":"Logic","c":"Side","l":"white"},{"p":"Logic","c":"Turn","l":"WHITE"},{"p":"Logic","c":"Fen","l":"writeChessboard()"},{"p":"application","c":"Board","l":"writeCom(String)","u":"writeCom(java.lang.String)"},{"p":"application","c":"Board","l":"writeMove(String)","u":"writeMove(java.lang.String)"},{"p":"Logic","c":"Move","l":"x"},{"p":"Logic","c":"Move","l":"y"}];updateSearchResults();